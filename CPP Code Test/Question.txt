//=================================================================
// Part 1
//=================================================================
// This code compiles and links with no errors or warnings, but has 
// many problems. 
// Please comment the code to point out any bugs and explain what will or 
// may go wrong at runtime.
// Please also comment the code to points out any bad coding practices 
// or any other mistakes you can see.
// Please spend around 15 minutes on part 1

#pragma warning(disable:4172)
#pragma warning(disable:4996)

// Calculate an area
class Area
{
public:
    Area(int w, int h) {mArea = w * h;}

    int mArea;
};

// Used to identify the type of UI element
class ElementType
{
public:
    ElementType(char *string) {mString = string;}
    char *mString;
};

// This is a base class from which all User Interface Elements will derive.
class UIElement
{
public:
    UIElement() {}
    ~UIElement();

    int GetWidth() {return mWidth;}
    void SetWidth(int width) {mWidth = width;}

    int GetHeight() {return mHeight;} 
    void SetHeight(int height) {mHeight = height;}

    void SetTitle(char *name)
    {
        strcpy(mName, name);
    }

    char *GetTitle()
    {
        return mName;
    }

    void Draw(); 

    Area GetArea()
    {
        Area *area = new Area(mWidth, mHeight);
        return *area;
    }

    virtual ElementType &GetElementType()
    {
        ElementType type = ElementType("Base");
        return type;
    }

    int mWidth;
    int mHeight;
protected:
    char mName[16];
};


//=================================================================
// Part2
//=================================================================
// Given a pointer to the first element of a linked list can you write a function
// that will return a pointer to the first element of the same list reversed?
// The code is below, add yours just after the comment that begins: "*** TODO"
// Please spend around 30 minutes on this part

// Test code
class ListNode
{
public:
	int data;
	ListNode* next;
	ListNode* prev;

	ListNode() :
		data(0),
		next(NULL),
		prev(NULL)
	{}
};

ListNode* reverseList( ListNode* head )
{
	ListNode* newHead = head;

	// *** TODO: add code here to reverse the linked list passed in
	
	ListNode* tempPrev = NULL, tempNext = NULL;
	
	while(newHead != NULL){
		tempNext = newHead->next;
		newHead->next = tempPrev;
		tempPrev = newHead;
		newHead = tempNext;
	}
	
	newHead = tempPrev;
	return newHead;
}

// Example function that calls reverseList.
void doSomeWork()
{
	ListNode* listHead = new ListNode[5];
	for( int i=0; i<5; i++ )
	{
		listHead[i].data = i;
		listHead[i].next = ( i < 4 ) ? listHead + i + 1 : NULL;
		listHead[i].prev = ( i > 0 ) ? listHead + i - 1 : NULL;
	}

	listHead = reverseList( listHead );
}


//=================================================================
// Part 3
//=================================================================
Please write a short (no more than 3 or 4 lines) answer for each of the following questions. You should spend about 15 minutes on this.

1. In C++, what's the difference between a struct and a class?
Different is the security. By default the access modifires of the struct is public and for the class is private.

2. What's polymorphism in C++ and what is it useful for?
Polymorphism in C++ helps to invoke the same function name with different formats depend on the calling and type of object.
It useful for function overloading, operator overloading and virtual function. 

3. Where does the overhead in a C++ virtual function come from?

4. What are the differences between malloc and new?
malloc() is a library function and used to allocate memory from heap at run time, do not call the constructor return void* type.
new() is an operator which allocate memory from free store and call the constructor return exact data type. 

5. What's the difference between ++i, i++ and i+=1?
++i pre increment where the variable value increment by one before the varible assign or evaluated.
i++ post increment where the variable value increment by one after the varible assign or evaluated.
i+=1 is the assingment operator will add the value of the expression to the variable to the left of the operator and assign the result to that variable. 

6. What's the difference in practical terms between a pointer and an array?
Pointer is the variable used to hold the address of other variables, also can hold the memory of an array.
Array used to store certain numbers of value of same type, as a collection of elements. 
sizeof pointer return the memory of the pointer variable itself, pointer can be assign to a value, can perform arithmetic operation.
sizeof array return the total memory of all elements in it, array cannot assign to a value, cannot perform arithmetic operation.

7. What's the difference in practical terms between a pointer and a reference?
Pointer can declare and initialize in single or multiple lines. Pointer can be reassingn. Can be null.
Reference should declare and initialize in single line and cannot be reassign. Cannot be null.
Reference is an alias of a variable, the actual and reference variable point to the same memory allocation. One changes will update the other.

8. What's the difference between logical && and bitwise &?
Logical && is AND operation return true or false.
Butwise & is AND operation done in the individual bit level of the integer and return the result in decimal. 

9. What are your views on calling a virtual function in a constructor?
Not good, the virtual function should not call in constructor. Even the virtual function are not virtual in constructor.

10. What are your views on calling "delete this"?
Delete operator should not used on this pointer, it will result the program to crash if some other member function try to access the member variable using this.

11. If you were tasked with improving a game's framerate, what's the *first* thing that you would do?
Reduce the screen resolution which reduce the number of pixels and increase the performance.

12. How could you tell that an integer is odd?
The odd number which is not divisible by 2, like 1,3,5,7,9.... except 0 (neutral number). 
r
13. How could you tell if an integer is a power of two?
The integer should divisble by 2 with zero remainder, where iteratively the result of it also should divisble by 2.
Also using decrement and comparing operation, decrement the value by one and comparing using bitwise AND, x & x-1, if result 0 the number is power of 2. 

14. How might developing on a console be different from a PC?
The input mapping is differ betwwen PC and console. For PC the mouse and keyboard key binding, console based on the type of joystick.
The deliverable files format are also vary between PC and console. 

15. What's a dot product and give a practical use?
Dot product use to check whether the lines are perpendicular, scalar value. Calculate the speed of a person running in the direction of the slope.

16. What's a cross product and give a practical use?
Cross product is give the vector that perpendicular to other two vectors. To calculate the angular momentum. 

17. What does an algorithm's time complexity measure?
Measure the time taken to perform or executing the algorithm function depen on the given input. Denotate with big O notation.

18. Give an advantage and disadvantage of using the STL.
Advantage - powerful tool with reusable code and algorithm, useful inbuilt functions
Disadvantage - STL not support with old compiler

19. What is endianness and why is it a problem for programmers?
Endianess is the byte order in the memory storage, little or big endian. It is a problem for programmers when the storing the binary data as it might differ between the machines.

20. What are design patterns and why are they useful?
Design patterns are the solution templates to solve the commonly occurring problems in software design which can be customize.
It helps to solve the issues very fast and effcienct by giving the hint for the implementing solution that suits our own program.